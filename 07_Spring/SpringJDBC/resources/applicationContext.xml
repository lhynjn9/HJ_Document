<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<context:component-scan base-package="com.hj.jdbc.model.dao"></context:component-scan>
	<context:component-scan base-package="com.hj.jdbc.model.service"></context:component-scan>
	
	<bean class="org.springframework.jdbc.datasource.DriverManagerDataSource"
	id = "dataSource">
		<property name="driverClassName" value="com.mysql.cj.jdbc.Driver"></property>
		<property name="url" value="jdbc:mysql://localhost:3306/hj_board?ServerTimezone=UTC"></property>
		<property name="username" value="root"></property>
		<property name="password" value="0000"></property>
	</bean>
	
	<!-- Connetion 역할을 해주지만, 더 유용한 것 -->
	<bean class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- 1. transactionManager를 dataSource를 이용해 생성해서 빈으로 등록 -->
	<bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
	id="transactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- 
	2. aop에서 동작할 transaction advice를 작성 : aspect + 기능
	<tx:advice transaction-manager="transactionManager" id="txAdvice">
		    <tx:attributes>
		    예외가 발생하면 롤백하겠다
		    	<tx:method name="*" rollback-for="Exception"/>
		    </tx:attributes>
	</tx:advice>
	
	3. advice를 aop에 태움
	<aop:config>
	반환 유형 상관 없고, jdbc의 모든 클래스에 대해서 register로 시작하는 매소드에 대해서 매개변수 상관없이 모두 걸려야함
		<aop:advisor advice-ref="txAdvice" 
		pointcut="execution(* com.hj.jdbc..*.register*(..))"/>
	</aop:config> -->
	
	<!-- 0. transaction에 대해 annotation-driven -->
	<!-- 1, 2, 3을 한번에 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
</beans>
